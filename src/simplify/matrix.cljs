(ns simplify.matrix
  (:require [simplify.vector :as vector]))

(defrecord Matrix [x00 x01 x02 x03
                   x10 x11 x12 x13
                   x20 x21 x22 x23
                   x30 x31 x32 x33])

(defn quadric-error [a v]
  (+ (* (:x v) (:x00 a) (:x v))
     (* (:y v) (:x10 a) (:x v))
     (* (:z v) (:x20 a) (:x v))
     (* (:x30 a) (:x v))

     (* (:x v) (:x01 a) (:y v))
     (* (:y v) (:x11 a) (:y v))
     (* (:z v) (:x21 a) (:y v))
     (* (:x31 a) (:y v))

     (* (:x v) (:x02 a) (:z v))
     (* (:y v) (:x12 a) (:z v))
     (* (:z v) (:x22 a) (:z v))
     (* (:x32 a) (:z v))

     (* (:x v) (:x03 a))
     (* (:y v) (:x13 a))
     (* (:z v) (:x23 a))
     (:x33 a)))

;; matrix, vector
(defn mul-position [a b]
  (let [x (+ (* (:x00 a) (:x b))
             (* (:x01 a) (:y b))
             (* (:x02 a) (:z b))
             (:x03 a))
        y (+ (* (:x10 a) (:x b))
             (* (:x11 a) (:y b))
             (* (:x12 a) (:z b))
             (:x13 a))
        z (+ (* (:x20 a) (:x b))
             (* (:x21 a) (:y b))
             (* (:x22 a) (:z b))
             (:x23 a))]
    (vector/->Vector x y z)))

(defn determinant [a]
  (- (* (:x00 a) (:x11 a) (:x22 a) (:x33 a))
     (+ (* (:x00 a) (:x11 a) (:x23 a) (:x32 a))
        (- (* (:x00 a) (:x12 a) (:x23 a) (:x31 a))
           (+ (* (:x00 a) (:x12 a) (:x21 a) (:x33 a))
              (- (* (:x00 a) (:x13 a) (:x21 a) (:x32 a))
                 (* (:x00 a) (:x13 a) (:x22 a) (:x31 a))))))

     (+ (* (:x01 a) (:x12 a) (:x23 a) (:x30 a))
        (- (* (:x01 a) (:x12 a) (:x20 a) (:x33 a))
           (+ (* (:x01 a) (:x13 a) (:x20 a) (:x32 a))
              (- (* (:x01 a) (:x13 a) (:x22 a) (:x30 a))
                 (+ (* (:x01 a) (:x10 a) (:x22 a) (:x33 a))
                    (* (:x01 a) (:x10 a) (:x23 a) (:x32 a))
                    (- (* (:x02 a) (:x13 a) (:x20 a) (:x31 a))
                       (+ (* (:x02 a) (:x13 a) (:x21 a) (:x30 a))
                          (- (* (:x02 a) (:x10 a) (:x21 a) (:x33 a))
                             (+ (* (:x02 a) (:x10 a) (:x23 a) (:x31 a))
                                (- (* (:x02 a) (:x11 a) (:x23 a) (:x30 a))
                                   (* (:x02 a) (:x11 a) (:x20 a) (:x33 a))))))))

                 (+ (* (:x03 a) (:x10 a) (:x21 a) (:x32 a))
                    (- (* (:x03 a) (:x10 a) (:x22 a) (:x31 a))
                       (+ (* (:x03 a) (:x11 a) (:x22 a) (:x30 a))
                          (- (* (:x03 a) (:x11 a) (:x20 a) (:x32 a))
                             (+ (* (:x03 a) (:x12 a) (:x20 a) (:x31 a))
                                (* (:x03 a) (:x12 a) (:x21 a) (:x30 a)))))))))))))

(defn inverse [a]
  (let [r (/ 1.0 (determinant a))]
    (->Matrix
     (* r (- (* (:x12 a) (:x23 a) (:x31 a)) (+ (* (:x13 a) (:x22 a) (:x31 a)) (- (* (:x13 a) (:x21 a) (:x32 a)) (* (:x11 a) (:x23 a) (:x32 a)))) (+ (* (:x12 a) (:x21 a) (:x33 a)) (* (:x11 a) (:x22 a) (:x33 a)))))
     (* r (- (* (:x03 a) (:x22 a) (:x31 a)) (* (:x02 a) (:x23 a) (:x31 a)) (+ (* (:x03 a) (:x21 a) (:x32 a)) (* (:x01 a) (:x23 a) (:x32 a)) (- (* (:x02 a) (:x21 a) (:x33 a)) (* (:x01 a) (:x22 a) (:x33 a))))))
     (* r (- (* (:x02 a) (:x13 a) (:x31 a)) (+ (* (:x03 a) (:x12 a) (:x31 a)) (- (* (:x03 a) (:x11 a) (:x32 a)) (* (:x01 a) (:x13 a) (:x32 a)))) (+ (* (:x02 a) (:x11 a) (:x33 a)) (* (:x01 a) (:x12 a) (:x33 a)))))
     (* r (- (* (:x03 a) (:x12 a) (:x21 a)) (* (:x02 a) (:x13 a) (:x21 a)) (+ (* (:x03 a) (:x11 a) (:x22 a)) (* (:x01 a) (:x13 a) (:x22 a)) (- (* (:x02 a) (:x11 a) (:x23 a)) (* (:x01 a) (:x12 a) (:x23 a))))))

     (* r (- (* (:x13 a) (:x22 a) (:x30 a)) (* (:x12 a) (:x23 a) (:x30 a)) (+ (* (:x13 a) (:x20 a) (:x32 a)) (* (:x10 a) (:x23 a) (:x32 a)) (- (* (:x12 a) (:x20 a) (:x33 a)) (* (:x10 a) (:x22 a) (:x33 a))))))
     (* r (- (* (:x02 a) (:x23 a) (:x30 a)) (+ (* (:x03 a) (:x22 a) (:x30 a)) (- (* (:x03 a) (:x20 a) (:x32 a)) (* (:x00 a) (:x23 a) (:x32 a)))) (+ (* (:x02 a) (:x20 a) (:x33 a)) (* (:x00 a) (:x22 a) (:x33 a)))))
     (* r (- (* (:x03 a) (:x12 a) (:x30 a)) (* (:x02 a) (:x13 a) (:x30 a)) (+ (* (:x03 a) (:x10 a) (:x32 a)) (* (:x00 a) (:x13 a) (:x32 a)) (- (* (:x02 a) (:x10 a) (:x33 a)) (* (:x00 a) (:x12 a) (:x33 a))))))
     (* r (- (* (:x02 a) (:x13 a) (:x20 a)) (+ (* (:x03 a) (:x12 a) (:x20 a)) (- (* (:x03 a) (:x10 a) (:x22 a)) (* (:x00 a) (:x13 a) (:x22 a)))) (+ (* (:x02 a) (:x10 a) (:x23 a)) (* (:x00 a) (:x12 a) (:x23 a)))))

     (* r (- (* (:x11 a) (:x23 a) (:x30 a)) (+ (* (:x13 a) (:x21 a) (:x30 a)) (- (* (:x13 a) (:x20 a) (:x31 a)) (* (:x10 a) (:x23 a) (:x31 a)))) (+ (* (:x11 a) (:x20 a) (:x33 a)) (* (:x10 a) (:x21 a) (:x33 a)))))
     (* r (- (* (:x03 a) (:x21 a) (:x30 a)) (* (:x01 a) (:x23 a) (:x30 a)) (+ (* (:x03 a) (:x20 a) (:x31 a)) (* (:x00 a) (:x23 a) (:x31 a)) (- (* (:x01 a) (:x20 a) (:x33 a)) (* (:x00 a) (:x21 a) (:x33 a))))))
     (* r (- (* (:x01 a) (:x13 a) (:x30 a)) (+ (* (:x03 a) (:x11 a) (:x30 a)) (- (* (:x03 a) (:x10 a) (:x31 a)) (* (:x00 a) (:x13 a) (:x31 a)))) (+ (* (:x01 a) (:x10 a) (:x33 a)) (* (:x00 a) (:x11 a) (:x33 a)))))
     (* r (- (* (:x03 a) (:x11 a) (:x20 a)) (* (:x01 a) (:x13 a) (:x20 a)) (+ (* (:x03 a) (:x10 a) (:x21 a)) (* (:x00 a) (:x13 a) (:x21 a)) (- (* (:x01 a) (:x10 a) (:x23 a)) (* (:x00 a) (:x11 a) (:x23 a))))))

     (* r (- (* (:x12 a) (:x21 a) (:x30 a)) (* (:x11 a) (:x22 a) (:x30 a)) (+ (* (:x12 a) (:x20 a) (:x31 a)) (* (:x10 a) (:x22 a) (:x31 a)) (- (* (:x11 a) (:x20 a) (:x32 a)) (* (:x10 a) (:x21 a) (:x32 a))))))
     (* r (- (* (:x01 a) (:x22 a) (:x30 a)) (+ (* (:x02 a) (:x21 a) (:x30 a)) (- (* (:x02 a) (:x20 a) (:x31 a)) (* (:x00 a) (:x22 a) (:x31 a)))) (+ (* (:x01 a) (:x20 a) (:x32 a)) (* (:x00 a) (:x21 a) (:x32 a)))))
     (* r (- (* (:x02 a) (:x11 a) (:x30 a)) (* (:x01 a) (:x12 a) (:x30 a)) (+ (* (:x02 a) (:x10 a) (:x31 a)) (* (:x00 a) (:x12 a) (:x31 a)) (- (* (:x01 a) (:x10 a) (:x32 a)) (* (:x00 a) (:x11 a) (:x32 a))))))
     (* r (- (* (:x01 a) (:x12 a) (:x20 a)) (+ (* (:x02 a) (:x11 a) (:x20 a)) (- (* (:x02 a) (:x10 a) (:x21 a)) (* (:x00 a) (:x12 a) (:x21 a)))) (+ (* (:x01 a) (:x10 a) (:x22 a)) (* (:x00 a) (:x11 a) (:x22 a))))))))

(defn quadric-vector [{:keys [x00 x01 x02 x03
                              x10 x11 x12 x13
                              x20 x21 x22 x23] :as args}]
  (let [b (apply ->Matrix args 0.0 0.0 0.0 1.0)]
    (mul-position (inverse b)
                  (vector/->Vector 0.0 0.0 0.0))))

(defn add [a b]
  (->Matrix (+ (:x00 a) (:x00 b))
            (+ (:x10 a) (:x10 b))
            (+ (:x20 a) (:x20 b))
            (+ (:x30 a) (:x30 b))

            (+ (:x01 a) (:x01 b))
            (+ (:x11 a) (:x11 b))
            (+ (:x21 a) (:x21 b))
            (+ (:x31 a) (:x31 b))

            (+ (:x02 a) (:x02 b))
            (+ (:x12 a) (:x12 b))
            (+ (:x22 a) (:x22 b))
            (+ (:x32 a) (:x32 b))

            (+ (:x03 a) (:x03 b))
            (+ (:x13 a) (:x13 b))
            (+ (:x23 a) (:x23 b))
            (+ (:x33 a) (:x33 b))))

